{"ast":null,"code":"var _jsxFileName = \"/Users/devjawal/Desktop/Courses/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Filter from \"./components/Filter\";\nimport Cards from \"./components/Cards\";\nimport { filterData, apiUrl } from \"./data\";\nimport { toast } from \"react-toastify\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [courses, setCourses] = useState(null);\n  const [loading, setLoading] = useState(true);\n  async function fetchData() {\n    setLoading(true);\n    try {\n      let res = await fetch(apiUrl);\n      let output = await res.json();\n      setCourses(output);\n    } catch (e) {\n      toast.error(\"Network issue\");\n    }\n    setLoading(false);\n  }\n  useEffect(() => {\n    fetchData();\n  }, []); //Starting me run hoga when App is rendered\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Filter, {\n        filterData: filterData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(Cards, {\n        courses: courses,\n        category: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"kbwfMAFtIQn7MbUY4FAcu1l/Bkk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","Filter","Cards","filterData","apiUrl","toast","useEffect","jsxDEV","_jsxDEV","App","_s","courses","setCourses","loading","setLoading","fetchData","res","fetch","output","json","e","error","children","fileName","_jsxFileName","lineNumber","columnNumber","Spinner","category","_c","$RefreshReg$"],"sources":["/Users/devjawal/Desktop/Courses/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Filter from \"./components/Filter\";\r\nimport Cards from \"./components/Cards\";\r\nimport { filterData,apiUrl } from \"./data\";\r\nimport { toast } from \"react-toastify\";\r\nimport {useEffect } from \"react\";\r\n\r\nconst App = () => {\r\n  const [courses,setCourses]=useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  async  function fetchData(){\r\n    setLoading(true);\r\n    try{\r\n      let res= await fetch(apiUrl);\r\n      let output = await res.json();\r\n      setCourses(output);\r\n    }\r\n    catch(e){\r\n      toast.error(\"Network issue\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [])//Starting me run hoga when App is rendered\r\n  \r\n  return(\r\n    <div>\r\n      <div>\r\n        <Navbar/>\r\n      </div>\r\n      <div>\r\n        <Filter filterData={filterData}/> \r\n      </div>\r\n      <div>\r\n        {\r\n          loading ? (<Spinner/>) : (<Cards courses={courses} category={category}/>)\r\n        }\r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,SAASC,UAAU,EAACC,MAAM,QAAQ,QAAQ;AAC1C,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAAQC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAACb,QAAQ,CAAC,IAAI,CAAC;EACzC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE5C,eAAgBgB,SAASA,CAAA,EAAE;IACzBD,UAAU,CAAC,IAAI,CAAC;IAChB,IAAG;MACD,IAAIE,GAAG,GAAE,MAAMC,KAAK,CAACb,MAAM,CAAC;MAC5B,IAAIc,MAAM,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MAC7BP,UAAU,CAACM,MAAM,CAAC;IACpB,CAAC,CACD,OAAME,CAAC,EAAC;MACNf,KAAK,CAACgB,KAAK,CAAC,eAAe,CAAC;IAC9B;IACAP,UAAU,CAAC,KAAK,CAAC;EACnB;EAEAR,SAAS,CAAC,MAAM;IACdS,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN,oBACEP,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,eACEd,OAAA,CAACR,MAAM;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNlB,OAAA;MAAAc,QAAA,eACEd,OAAA,CAACP,MAAM;QAACE,UAAU,EAAEA;MAAW;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACNlB,OAAA;MAAAc,QAAA,EAEIT,OAAO,gBAAIL,OAAA,CAACmB,OAAO;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,gBAAKlB,OAAA,CAACN,KAAK;QAACS,OAAO,EAAEA,OAAQ;QAACiB,QAAQ,EAAEA;MAAS;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAExE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAGV,CAAC;AAAChB,EAAA,CArCID,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAuCT,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}